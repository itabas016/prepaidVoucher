//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PayMedia.Integration.IFComponents.BBCL.PrepaidVoucher.AscCashValid {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ASC_CASH_VALIDSoap", Namespace="http://tempuri.org/")]
    public partial class ASC_CASH_VALID : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback user_authOperationCompleted;
        
        private System.Threading.SendOrPostCallback user_auth_amtOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ASC_CASH_VALID() {
            this.Url = global::PayMedia.Integration.IFComponents.BBCL.PrepaidVoucher.Properties.Settings.Default.PayMedia_Integration_IFComponents_BBCL_PrepaidVoucher_AscCashValid_ASC_CASH_VALID;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event user_authCompletedEventHandler user_authCompleted;
        
        /// <remarks/>
        public event user_auth_amtCompletedEventHandler user_auth_amtCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/user_auth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("error")]
        public string user_auth(string accountno, string usercode, string password) {
            object[] results = this.Invoke("user_auth", new object[] {
                        accountno,
                        usercode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void user_authAsync(string accountno, string usercode, string password) {
            this.user_authAsync(accountno, usercode, password, null);
        }
        
        /// <remarks/>
        public void user_authAsync(string accountno, string usercode, string password, object userState) {
            if ((this.user_authOperationCompleted == null)) {
                this.user_authOperationCompleted = new System.Threading.SendOrPostCallback(this.Onuser_authOperationCompleted);
            }
            this.InvokeAsync("user_auth", new object[] {
                        accountno,
                        usercode,
                        password}, this.user_authOperationCompleted, userState);
        }
        
        private void Onuser_authOperationCompleted(object arg) {
            if ((this.user_authCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.user_authCompleted(this, new user_authCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/user_auth_amt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("error")]
        public string user_auth_amt(string accountno, string usercode, string password, double amt, out float amount) {
            object[] results = this.Invoke("user_auth_amt", new object[] {
                        accountno,
                        usercode,
                        password,
                        amt});
            amount = ((float)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void user_auth_amtAsync(string accountno, string usercode, string password, double amt) {
            this.user_auth_amtAsync(accountno, usercode, password, amt, null);
        }
        
        /// <remarks/>
        public void user_auth_amtAsync(string accountno, string usercode, string password, double amt, object userState) {
            if ((this.user_auth_amtOperationCompleted == null)) {
                this.user_auth_amtOperationCompleted = new System.Threading.SendOrPostCallback(this.Onuser_auth_amtOperationCompleted);
            }
            this.InvokeAsync("user_auth_amt", new object[] {
                        accountno,
                        usercode,
                        password,
                        amt}, this.user_auth_amtOperationCompleted, userState);
        }
        
        private void Onuser_auth_amtOperationCompleted(object arg) {
            if ((this.user_auth_amtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.user_auth_amtCompleted(this, new user_auth_amtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void user_authCompletedEventHandler(object sender, user_authCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class user_authCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal user_authCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void user_auth_amtCompletedEventHandler(object sender, user_auth_amtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class user_auth_amtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal user_auth_amtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public float amount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591